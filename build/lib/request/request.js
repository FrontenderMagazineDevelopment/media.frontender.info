'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _isomorphicFetch=require('isomorphic-fetch');var _isomorphicFetch2=_interopRequireDefault(_isomorphicFetch);var _urlencode=require('urlencode');var _urlencode2=_interopRequireDefault(_urlencode);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{return Promise.resolve(value).then(function(value){step('next',value)},function(err){step('throw',err)})}}return step('next')})}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}var TMMicroServiceAPI=function(){function TMMicroServiceAPI(){_classCallCheck(this,TMMicroServiceAPI)}_createClass(TMMicroServiceAPI,[{key:'request',/**
  * Fetch remote resource
  *
  * @method request
  * @memberof TMMicroServiceAPI
  *
  * @static
  * @param {string} url - resource url
  * @param {Object} userOptions - user defined options
  * @return {Promise} - Promise with server {@link https://developer.mozilla.org/docs/Web/API/Response|Response}
  */value:function(){var _ref=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee(url,userOptions){var updatedUrl,headers,defaultOptions,options,encodedData;return regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(url===undefined)){_context.next=2;break}throw new ErrorBadRequest(400,TMMicroServiceAPI.messages.badRequest);case 2:updatedUrl=url.replace(/\/v[\d]+(.[\d]+)?(.[\d]+)?/i,'/'+this.version);headers={'Content-Type':'application/json',Accept:'application/json'};if(this.token!==null){headers=_extends({},headers,{Authorization:this.token})}defaultOptions={method:'GET',headers:headers,data:{}};options=_extends({},defaultOptions,userOptions);options.headers=_extends({},headers,options.headers);encodedData=_urlencode2.default.stringify(options.data);return _context.abrupt('return',(0,_isomorphicFetch2.default)(encodedData.length===0?updatedUrl:updatedUrl+'?'+encodedData,options));case 10:case'end':return _context.stop();}}},_callee,this)}));function request(_x,_x2){return _ref.apply(this,arguments)}return request}()/**
   * Object with class service messages
   * @type {Object}
   */}]);return TMMicroServiceAPI}();TMMicroServiceAPI.messages={url:'Wrong Service URL Format',version:'Wrong Version Format',badRequest:'Bad Request'};exports.default=TMMicroServiceAPI;
//# sourceMappingURL=request.js.map